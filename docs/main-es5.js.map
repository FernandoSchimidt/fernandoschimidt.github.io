{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/todo.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","service","todos","form","description","required","minLength","listarTodos","todo","value","salvar","subscribe","savedTodo","push","reset","listar","todoList","next","res","marcarComoConcluido","todoAtt","done","doneDate","submit","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","TodoService","http","apiURL","post","get","url","patch","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Todo } from './todo';\nimport { TodoService } from './todo.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(private service: TodoService) {\n\n  }\n  todos: Todo[] = []\n  form: FormGroup = new FormGroup({\n    description: new FormControl('', [Validators.required, Validators.minLength(3)])\n  })\n  ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n    this.listarTodos()\n  }\n  submit() {\n    const todo: Todo = { ...this.form.value }\n    this.service.salvar(todo)\n      .subscribe(savedTodo => {\n        this.todos.push(savedTodo)\n        this.form.reset();\n      })\n  }\n\n  listarTodos() {\n    this.service.listar()\n      .subscribe(todoList => {\n        this.todos = todoList\n      })\n  }\n  delete(todo: Todo) {\n    this.service.delete(todo.id)\n      .subscribe({\n        next: (res) => {\n          this.listarTodos()\n        }\n      })\n  }\n  concluido(todo: Todo) {\n    this.service.marcarComoConcluido(todo.id)\n      .subscribe({\n        next: (todoAtt) => {\n          todo.done = todoAtt.done\n          todo.doneDate = todoAtt.doneDate\n        }\n      })\n  }\n}\n","<nav class=\"navbar navbar-dark bg-dark\">\r\n  <a href=\"\" class=\"navbar-brand\">TODO APP</a>\r\n</nav>\r\n<div class=\"container mt-4\">\r\n  <h3>Adicionar Tarefas</h3>\r\n  <hr />\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-10\">\r\n        <input type=\"text\" class=\"form-control\" placeholder=\"Adicionar tarefa\" formControlName=\"description\" />\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!form.get('description').valid\" (click)=\"submit()\">\r\n          ADD\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n  <hr />\r\n  <h3>Tarefas</h3>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <ul class=\"list-group\">\r\n        <li *ngFor=\"let t of todos\" class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n          <span class=\"{{t.done?'done':''}}\">\r\n            {{ t.description }} {{t.doneDate}}\r\n          </span>\r\n          <div class=\"btn-group\">\r\n            <button class=\"btn btn-success\" [disabled]=\"t.done\" (click)=\"concluido(t)\">Done</button>\r\n            <button class=\"btn btn-danger\" (click)=\"delete(t)\">Delete</button>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TodoService } from './todo.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http'\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [TodoService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Todo } from './todo';\nimport { environment } from '../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n\n  apiURL: string = environment.apiURL;\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  salvar(todo: Todo): Observable<Todo> {\n    return this.http.post<Todo>(this.apiURL, todo)\n  }\n  listar(): Observable<Todo[]> {\n    return this.http.get<Todo[]>(this.apiURL)\n  }\n  delete(id: number): Observable<void> {\n    const url = `${this.apiURL}/${id}`\n    return this.http.delete<void>(url)\n  }\n  marcarComoConcluido(id: number): Observable<Todo> {\n    const url = `${this.apiURL}/${id}/done`\n    return this.http.patch<Todo>(url, {})\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'http://localhost:8080/api/todos'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}